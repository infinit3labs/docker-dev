# Copy this file to .env and fill in values as needed.
# docker-compose will load variables from .env automatically.

# Image used by docker-compose
IMAGE_NAME="${IMAGE_NAME:-}"

# Git repository details for secure-clone.sh (single or multiple repos)
# EITHER set one of the following for a single repo:
## GIT_REPO=owner/repo
## GIT_URL=https://github.com/owner/repo.git
## GIT_URL=https://dev.azure.com/org/project/_git/repo
# OR set GIT_REPOS to clone/update multiple repos (comma/space/semicolon separated):
## GIT_REPOS=owner/repo1,owner/repo2 https://dev.azure.com/org/project/_git/repo3
# Branch or tag to clone (applies to all repos)
GIT_BRANCH=main
# Repos are cloned under /workspace/repos/<name> inside the container (named volume)

# Preferred secret file mount location inside the container (do not commit real secrets!)
# The compose file mounts ./secrets/git_token at /run/secrets/git_token. You can override here if needed.
GIT_TOKEN_FILE=/run/secrets/git_token

# Optionally set a token directly (NOT RECOMMENDED). Prefer file-based secret above.
# If set, ensure you never commit the .env file to source control.
# GIT_TOKEN=

# Provider/host selection (optional)
# GIT_PROVIDER=github   # default if unset
# GIT_PROVIDER=azure
# GIT_HOST=github.com   # or dev.azure.com

# Username for HTTP auth (optional)
# GitHub PATs accept 'x-access-token'. Azure DevOps requires a non-empty user, e.g., 'azdo'.
# GIT_USERNAME=

# Build script variables (used by build-secure.sh)
# Local image tag when building from Dockerfile
# IMAGE_NAME when building can be overridden in shell; kept here for convenience
# DOCKERFILE=Dockerfile

# If workspace contains a different repo or non-empty dir, allow replacement when set to 1
GIT_FORCE_RECLONE=1
